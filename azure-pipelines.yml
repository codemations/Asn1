trigger:
- main
- feature/*
- release/*

pool:
  vmImage: 'windows-2022'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: gitversion/setup@3.0.0
  inputs:
    versionSpec: '6.0.2'

- task: gitversion/execute@3
  inputs:
    useConfigFile: true
    configFilePath: '$(System.DefaultWorkingDirectory)/GitVersion.yml'

- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: SonarCloudPrepare@2
  inputs:
    SonarCloud: 'SonarCloud'
    organization: 'codemations'
    scannerMode: 'MSBuild'
    projectKey: 'codemations_Asn1'
    extraProperties: sonar.cs.opencover.reportsPaths=$(Agent.TempDirectory)/**/*.opencover.xml

- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: '**/*.csproj'
    arguments: '--configuration $(buildConfiguration)'
    versioningScheme: 'byEnvVar'
    versionEnvVar: 'GitVersion.FullSemVer'

- task: DotNetCoreCLI@2
  inputs:
    command: 'test'
    projects: '**/*Tests/*.csproj'
    arguments: '--configuration $(buildConfiguration) --no-restore --collect:"Code Coverage" --logger trx'
    publishTestResults: true

- task: SonarCloudAnalyze@2

- task: SonarCloudPublish@2
  inputs:
    pollingTimeoutSec: '300'

- task: DotNetCoreCLI@2
  displayName: 'dotnet pack'
  inputs:
    command: 'pack'
    arguments: '--include-symbols -p:ContinuousIntegrationBuild=true'
    packagesToPack: 'src/**/*.csproj'
    nobuild: true
    versioningScheme: 'byEnvVar'
    versionEnvVar: 'GitVersion.FullSemVer'

- task: DotNetCoreCLI@2
  displayName: 'dotnet push internal'
  condition: eq(variables['Build.SourceBranchName'], 'main')
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/*.nupkg'
    nuGetFeedType: 'internal'
    publishVstsFeed: '73ab56f3-41d3-43aa-b445-6c2591ea0149/39973489-c2cb-4fdf-97f7-17ca9ef2c262'

- task: DotNetCoreCLI@2
  displayName: 'dotnet push internal (snupkg)'
  condition: eq(variables['Build.SourceBranchName'], 'main')
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/*.snupkg'
    nuGetFeedType: 'internal'
    publishVstsFeed: '73ab56f3-41d3-43aa-b445-6c2591ea0149/39973489-c2cb-4fdf-97f7-17ca9ef2c262'
